# Basic use for my personal.
# 设置服务器ip变量
export SSH_USER="rezo"

# 2018/03/21 - 如果私钥可配置在此处
export SSH_OPT=" -4C"

# 2018/03/21 - 可在zsh中使用这个ip变量
export localhost="192.168.1.254"
export loop="127.0.0.1"

# 2018/03/21 - 注意这个是不会建立alias的
export noalias="127.0.0.1"

# 通过循环这个变量, 设置相应的alias
export SERVERS="localhost
loop"

local TMUX_CMD='/usr/local/bin/tmux'
if [ ! -f $TMUX_CMD ]; then
    TMUX_CMD=`whereis tmux | awk '{print $2}'`
fi
if [ -f $TMUX_CMD ]; then
    function ts_portal(){
        local session_name="portal"
        local ps_status=`ps cax | grep tmux`
        local session_ex=`$TMUX_CMD list-sessions 2>/dev/null | grep -o "$session_name"`
        if [ "${ps_status}" = "" ] || [ "$session_ex" = "" ]; then
            tmux new -d -n "default" -s "$session_name"
            return
        fi
    }

    function ts_localhost(){
        local session_name="monitors"
        local window_name="localhost"

        local ps_status=`ps cax | grep tmux`
        local session_ex=`$TMUX_CMD list-sessions 2>/dev/null | grep -o "$session_name"`
        local window_ex=`$TMUX_CMD list-window -t "$session_name" 2>/dev/null | grep -o "$window_name"`
        if [ "${ps_status}" = "" ] || [ "$session_ex" = "" ] || [ "$window_ex" = "" ]; then
            if [ "$session_ex" = "" ]; then
                tmux new -d -n "${window_name}" -s "$session_name" -x 160 -y 200 "systat -vm 1"
            elif [ "$window_ex" = "" ]; then
                # tmux kill-pane -t "${window_name}"
                tmux neww -d -n "${window_name}" -t "$session_name" "systat -vm 1"
            fi
            tmux neww -d -n "io" -t "$session_name" "systat -io 1"
            tmux neww -d -n "if" -t "$session_name" "systat -if 1"
            tmux neww -d -n "top" -t "$session_name" "top"
            tmux join -dh -s "${session_name}:io" -t "${session_name}:${window_name}.0"
            tmux join -dv -s "${session_name}:if" -t "${session_name}:${window_name}.0"
            tmux join -dv -s "${session_name}:top" -t "${session_name}:${window_name}.2"

            return
        fi

        if [ "$window_ex" != "" ]; then
            tmux switch-client -t "${session_name}:${window_name}"
        fi

    }

    function ts_misc(){
        local session_name="misc"
        # tmux kill-session -t "${session_name}"
        local ps_status=`ps cax | grep tmux`
        local session_ex=`$TMUX_CMD list-sessions 2>/dev/null | grep -o "$session_name"`
        if [ "${ps_status}" = "" ] || [ "$session_ex" = "" ]; then
            # 这里的命令可能需要手动启动, 所以先建立panel, 再输入之
            tmux new -d -n "ssh_proxy" -s "$session_name"
            tmux neww -d -n "telegram" -t "${session_name}"
            tmux send-key -t "${session_name}:ssh_proxy.0" "ssh_proxy" Enter "top" "Enter"
            tmux send-key -t "${session_name}:telegram.0" "telegram-cli" Enter
            return
        fi
        if [ "$session_ex" != "" ]; then
            tmux switch-client -t "${session_name}"
        fi
    }

    local ps_status=`ps cax | grep tmux`
    if [ "${ps_status}" = "" ]; then
        ts_localhost
        ts_portal
    fi

fi
